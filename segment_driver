----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    22:25:42 05/15/2019 
-- Design Name: 
-- Module Name:    segment_driver - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity segment_driver is
port (
		x : in std_logic_vector (15 downto 0);
		clock : in std_logic;
		clear : in std_logic;
		segment : out std_logic_vector(6 downto 0);
		an : out std_logic_vector(3 downto 0);
		dp : out std_logic
		);
end segment_driver;

architecture Behavioral of segment_driver is
	signal en : std_logic_vector(1 downto 0);
	signal digit : std_logic_vector(3 downto 0);
	signal ano_en : std_logic_vector (3 downto 0);
begin
	ano_en(3) <=x(15) or x(14) or x(13) or x(12);
	ano_en(2) <=x(15) or x(14) or x(13) or x(12) or
				x(11) or x(10) or x(9) or x(8);
	ano_en(1) <=x(15) or x(14) or x(13) or x(12) or
				x(11) or x(10) or x(9) or x(8) or
				x(7) or x(6) or x(5) or x(4);
	ano_en(0) <= '1';
	
	process(en,x)
		begin
			case en is
				when "00" =>digit<=x(3 downto 0);
				when "01" =>digit<=x(7 downto 4);
				when "10" =>digit<=x(11 downto 8);
				when others =>digit<=x(15 downto 12);
			end case;
	end process;
	process(digit)
		begin
			case digit is
				when x"0"=>segment<="0000000";
				when x"1"=>segment<="1001111";
				when x"2"=>segment<="0010010";
				when x"3"=>segment<="0000110";
				when x"4"=>segment<="1001100";
				when x"5"=>segment<="0100100";
				when x"6"=>segment<="0100000";
				when x"7"=>segment<="0001111";
				when x"8"=>segment<="0000000";
				when x"9"=>segment<="0000100";
				when x"A"=>segment<="0001000";
				when x"B"=>segment<="1100000";
				when x"C"=>segment<="0110001";
				when x"D"=>segment<="1000010";
				when x"E"=>segment<="0110000";
				when others =>segment<="1111111";
			end case;
	end process;
	process(en, ano_en)
		begin
			an <="1111";
			if ano_en(conv_integer(en))='1' then
				ano_en(conv_integer(en))<='0';
			end if;
	end process;
	process(clock, clear)
	begin
		if clear = '1' then
			en<="00";
		elsif clock 'event and clock='1' then
			en<=en+1;
		end if;
	end process;
end Behavioral;

